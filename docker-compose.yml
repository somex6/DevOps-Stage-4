# version: '3.8'

services:
  traefik:
    image: traefik:v2.5
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --certificatesresolvers.le.acme.email=iwekasomto@proton.me
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt:/letsencrypt
    networks:
      - app-net
  frontend:
    build: 
      context: ./frontend  
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "8080:8080"
    environment:
      - AUTH_API_ADDRESS=http://auth-api:8081
      - TODOS_API_ADDRESS=http://todos-api:8082
      - PORT=8080
      - ZIPKIN_URL=http://zipkin:9411 
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=PathPrefix(`/`)
      - traefik.http.routers.frontend.entrypoints=websecure
      - traefik.http.routers.frontend.tls.certresolver=le
      - traefik.http.services.frontend.loadbalancer.server.port=8080
    networks:
      - app-net

  auth-api:
    build: 
      context: ./auth-api  
      dockerfile: Dockerfile
    container_name: auth-api
    environment:
      - AUTH_API_PORT=8081
      - USERS_API_ADDRESS=http://users-api:8083
      - JWT_SECRET=myfancysecret
    labels:
      - traefik.enable=true
      - traefik.http.routers.auth-api.rule=PathPrefix(`/api/auth`)
      - traefik.http.routers.auth-api.entrypoints=websecure
      - traefik.http.routers.auth-api.tls.certresolver=le
      - traefik.http.routers.auth-api.middlewares=auth-stripprefix
      - traefik.http.middlewares.auth-stripprefix.stripprefix.prefixes=/api/auth
    ports:
      - "8081:8081"
    networks:
      - app-net

  users-api:
    build: 
      context: ./users-api  
      dockerfile: Dockerfile
    container_name: users-api
    environment:
      - JWT_SECRET=myfancysecret
      - SERVER_PORT=8083
      - traefik.enable=true
      - traefik.http.routers.todos-api.rule=PathPrefix(`/api/todos`)
      - traefik.http.routers.todos-api.middlewares=todos-stripprefix
      - traefik.http.middlewares.todos-stripprefix.stripprefix.prefixes=/api/todos
    ports:
      - "8083:8083"
    networks:
      - app-net
  todos-api:
    build: 
      context: ./todos-api  
      dockerfile: Dockerfile
    container_name: todos-api
    ports:
      - "8082:8082"
    environment:
      - JWT_SECRET=myfancysecret
      - REDIS_HOST=redis-queue
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
      - TODO_API_PORT=8082
    labels:
      - traefik.enable=true
      - traefik.http.routers.auth-api.rule=PathPrefix(`/api/todos`)
      - traefik.http.routers.auth-api.entrypoints=websecure
      - traefik.http.routers.auth-api.tls.certresolver=le
      - traefik.http.routers.auth-api.middlewares=auth-stripprefix
      - traefik.http.middlewares.auth-stripprefix.stripprefix.prefixes=/api/todos
    networks:
      - app-net

  log-message-processor:
    build: 
      context: ./log-message-processor  
      dockerfile: Dockerfile
    container_name: log-message-processor
    ports:
      - "8090:8090"
    environment:
      - REDIS_HOST=redis-queue
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    networks:
      - app-net

  redis-queue:
    image: redis:alpine
    container_name: redis-queue
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - app-net
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    labels:
      - traefik.enable=true
      - traefik.http.routers.auth-api.rule=PathPrefix(`/api/zipkin`)
      - traefik.http.routers.auth-api.entrypoints=websecure
      - traefik.http.routers.auth-api.tls.certresolver=le
      - traefik.http.routers.auth-api.middlewares=auth-stripprefix
      - traefik.http.middlewares.auth-stripprefix.stripprefix.prefixes=/api/zipkin
    ports:
      - "9411:9411"
    networks:
      - app-net
networks:
  app-net:
    driver: bridge

volumes:
  redis-data:
  letsencrypt: